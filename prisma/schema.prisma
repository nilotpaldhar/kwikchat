generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ThemeOptions {
  light
  dark
  system
}

model User {
  id            String    @id @default(cuid())
  name          String?
  displayName   String?
  email         String?   @unique
  username      String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  avatar        String?
  banner_color  String?   @default("#27AE80")
  bio           String?   @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts     Account[]
  userSettings UserSettings?
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model UserSettings {
  id               String       @id @default(cuid())
  colorTheme       ThemeOptions @default(light)
  twoFactorEnabled Boolean      @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
